name: CI Pipeline

on:
  push:
    branches:
      - sian/sonar
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0' # Use .NET 8

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --no-restore --configuration Release

    - name: Run Tests with Coverage
      run: dotnet test BPCalculatorTest/BPCalculatorTest.csproj --no-build --configuration Release --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install --tool-path tools dotnet-reportgenerator-globaltool
      env:
        DOTNET_CLI_HOME: ${{ runner.temp }}
    
     - name: Install SonarScanner
      run: dotnet tool install --tool-path tools dotnet-sonarscanner
      env:
        DOTNET_CLI_HOME: ${{ runner.temp }}
  
    - name: Convert Coverage Report to lcov
      run: |
        ./tools/reportgenerator \
          "-reports:BPCalculatorTest/TestResults/*/coverage.cobertura.xml" \
          "-targetdir:coverage" \
          "-reporttypes:lcov"

    - name: Upload to SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./tools/dotnet-sonarscanner begin \
          /k:"salob_bp" \
          /o:"salob" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
          /d:sonar.cs.opencover.reportsPaths="coverage/lcov.info"
          
        dotnet build
        
        dotnet-sonarscanner end \
          /d:sonar.login="${
