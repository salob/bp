@page
@model BPCalculator.Pages.BloodPressureModel

@{
    ViewData["Title"] = "BP Category Calculator STAGING";
}

@{
  string bpCategoryClass = Model.BP.Category switch
  { 
    BPCategory.High => "high",
    BPCategory.PreHigh => "preHigh",
    BPCategory.Ideal => "ideal",
    BPCategory.Low => "low",
    _ => "from-group" // default
  };
}

<h4>BP Category Calculator</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="form1">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BP.Systolic" class="control-label">Systolic</label>
                <input asp-for="BP.Systolic" class="form-control"/>
                <span asp-validation-for="BP.Systolic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BP.Diastolic" class="control-label">Diastolic</label>
                <input asp-for="BP.Diastolic" class="form-control" />
                <span asp-validation-for="BP.Diastolic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
            @if (ViewData.ModelState.IsValid)
            {
                <div class="@bpCategoryClass">
                    @Html.DisplayFor(model => model.BP.Category, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="tip-text">
                    @Html.DisplayFor(model => model.BP.Tip, new { htmlAttributes = new { @class = "tip-text" } })
                </div>                
            }
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
